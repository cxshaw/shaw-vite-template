{
	"extends": [
		"eslint-config-ali",
		"prettier"
	],
	"env": {
		"browser": true,
		"node": true
	},
	//	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true
		},
		"ecmaVersion": "latest",
		"sourceType": "module",
		"project": "./tsconfig.json"
	},
	"rules": {
		"accessor-pairs": "error",
		"array-bracket-spacing": [
			"error",
			"always"
		],
		"block-scoped-var": "error",
		"camelcase": "error",
		"comma-dangle": [
			"error",
			"never"
		],
		"comma-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		// 控制逗号在行尾出现还是在行首出现
		// http://eslint.org/docs/rules/comma-style
		"comma-style": [
			"error",
			"last"
		],
		"complexity": [
			"error",
			9
		],
		"computed-property-spacing": [
			"error",
			"never"
		],
		"curly": [
			"error",
			"all"
		],
		"default-case": "error",
		// 强制object.key 中 . 的位置，参数:
		//      property，'.'号应与属性在同一行
		//      object, '.' 号应与对象名在同一行
		"dot-location": [
			"error",
			"property"
		],
		// 强制使用.号取属性
		//    参数： allowKeywords：true 使用保留字做属性名时，只能使用.方式取属性
		//                          false 使用保留字做属性名时, 只能使用[]方式取属性 e.g ["error", {"allowKeywords": false}]
		//           allowPattern:  当属性名匹配提供的正则表达式时，允许使用[]方式取值,否则只能用.号取值 e.g ["error", {"allowPattern": "^[a-z]+(_[a-z]+)+$"}]
		"dot-notation": [
			"error",
			{
				"allowKeywords": true
			}
		],
		"eol-last": "error",
		// 使用 === 替代 ==
		"eqeqeq": "error",
		"no-alert": "error",
		"no-array-constructor": "error",
		"no-catch-shadow": "error",
		"no-cond-assign": "error",
		"no-console": "error",
		"no-const-assign": "error",
		"no-constant-condition": "error",
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-delete-var": "error",
		"no-dupe-keys": "error",
		"no-dupe-args": "error",
		"no-duplicate-case": "error",
		"no-empty": "error",
		"no-empty-character-class": "error",
		"no-labels": "error",
		"no-eq-null": "error",
		"no-eval": "error",
		"no-ex-assign": "error",
		"no-extend-native": "error",
		"no-extra-bind": "error",
		"no-extra-boolean-cast": "error",
		"no-extra-parens": "error",
		"no-extra-semi": "error",
		"no-fallthrough": "error",
		"no-floating-decimal": "error",
		"no-func-assign": "error",
		"no-implicit-coercion": "error",
		"no-implied-eval": "error",
		"no-inline-comments": "warn",
		"no-inner-declarations": [
			"error",
			"functions"
		],
		"no-invalid-regexp": "error",
		"no-invalid-this": "error",
		"no-irregular-whitespace": "error",
		"no-iterator": "error",
		"no-label-var": "error",
		"no-lone-blocks": "error",
		"no-lonely-if": "error",
		"no-loop-func": "warn",
		"no-mixed-requires": "error",
		"no-mixed-spaces-and-tabs": [
			"error",
			false
		],
		"no-multi-spaces": "warn",
		"no-multi-str": "error",
		"no-native-reassign": "error",
		"no-negated-in-lhs": "error",
		"no-nested-ternary": "warn",
		"no-new": "warn",
		"no-new-func": "warn",
		"no-new-object": "error",
		"no-new-require": "error",
		"no-octal": "error",
		"no-octal-escape": "error",
		"no-param-reassign": "error",
		"no-proto": "error",
		"no-redeclare": "error",
		"no-regex-spaces": "error",
		"no-return-assign": "warn",
		"no-script-url": "error",
		"no-self-compare": "error",
		"no-shadow": "error",
		"no-shadow-restricted-names": "error",
		"no-spaced-func": "error",
		"no-sparse-arrays": "error",
		"no-trailing-spaces": "warn",
		"no-throw-literal": "error",
		"no-undef": "error",
		"no-undef-init": "error",
		"no-undefined": "error",
		"no-unexpected-multiline": "error",
		"no-unneeded-ternary": "error",
		"no-unreachable": "error",
		"no-unused-expressions": "error",
		"no-unused-vars": [
			"error",
			{
				"vars": "all",
				"args": "after-used"
			}
		],
		"no-use-before-define": "error",
		"no-useless-call": "error",
		"no-var": "error",
		"no-warning-comments": [
			"warn",
			{
				"terms": [
					"todo",
					"fixme",
					"xxx"
				],
				"location": "start"
			}
		],
		"no-with": "error",
		"indent": [
			"error",
			2
		],
		"init-declarations": "error",
		"key-spacing": [
			"error",
			{
				"beforeColon": false,
				"afterColon": true
			}
		],
		"lines-around-comment": "error",
		"newline-after-var": "error"
	}
}